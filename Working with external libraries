#Working with external lib

#Luigi is trying to perform an analysis to determine the best items for winning races on the Mario Kart circuit. 
#He has some data in the form of lists of dictionaries that look like...

#[
#   {'name': 'Peach', 'items': ['green shell', 'banana', 'green shell',], 'finish': 3},
#    {'name': 'Bowser', 'items': ['green shell',], 'finish': 1},
# Sometimes the racer's name wasn't recorded
#    {'name': None, 'items': ['mushroom',], 'finish': 2},
#    {'name': 'Toad', 'items': ['green shell', 'mushroom'], 'finish': 1},
#]
#'items' is a list of all the power-up items the racer picked up in that race, and 'finish' was their placement in the race (1 for first place, 3 for third, etc.).

#The function below takes a list like this and return a dictionary mapping each item to how many times it was picked up by first-place finishers.
#Code

  from learntools.python.luigi_analysis import full_dataset

def best_items(racers):
    winner_item_counts = {}
    for i in range(len(racers)):
        racer = racers[i]
        if racer['finish'] == 1:
            for item in racer['items']:
                if i not in winner_item_counts:
                    winner_item_counts[i] = 0
                winner_item_counts[i] += 1

        if racer['name'] is None:
            print("WARNING: Encountered racer with unknown name on iteration {}/{} (racer = {})".format(
                i+1, len(racers), racer['name'])
                 )
    return winner_item_counts

best_items(full_dataset)
